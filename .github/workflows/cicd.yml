name: CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write

env:
  PYTHON_VERSION: "3.12"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt pytest ruff

      - name: Auto-fix imports
        run: ruff check --fix .

      - name: Lint
        run: ruff check .

      - name: Test
        run: pytest -q

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: ">= 470.0.0"

      - name: Configure Docker auth for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      - name: Build & Push image
        id: build
        run: |
          IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REPO }}/insight-agent:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_OUTPUT
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply (deploy)
        env:
          TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
          TF_VAR_region: ${{ secrets.GCP_REGION }}
          TF_VAR_image: ${{ steps.build.outputs.IMAGE }}
          TF_VAR_github_owner: ${{ github.repository_owner }}
          TF_VAR_github_repo: ${{ github.event.repository.name }}
        working-directory: terraform
        run: |
          terraform apply -auto-approve \
            -var "project_id=${TF_VAR_project_id}" \
            -var "region=${TF_VAR_region}" \
            -var "image=${TF_VAR_image}" \
            -var "github_owner=${TF_VAR_github_owner}" \
            -var "github_repo=${TF_VAR_github_repo}"

      - name: Verify deployment
        run: |
          SERVICE_URL=$(gcloud run services describe insight-agent --region=${{ secrets.GCP_REGION }} --format="value(status.url)")
          echo "Service deployed at: $SERVICE_URL"
